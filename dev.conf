#   Upstream de aplicacion Drawio.
#   Define las conexiones a los contenedores 
#   mediante su nombre de servicio (definido en docker-compose.yml)
#   upstream drawio-app comunica con el servicio dwario en su puerto 8080
upstream drawio-app {

    # El servidor al que forwardea la petición.
    server drawio:8080;
}

#   Upstream del microservicio generador de código.
upstream drawio-codegen--microservice {

    server drawio-codegen:8080;
}

server {

    listen 80;
    server_name draw.mx.development;

    #   Todas las peticiones hacia la raiz del servidor nginx
    location / {
        
        # Hacemos un proxy hacia nuestro upstream
        proxy_pass http://drawio-app/draw/;
        proxy_redirect default;

        # Cabeceras
        proxy_set_header X-Real_IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;

        proxy_http_version 1.1;
        proxy_redirect off;

        # Conectar con el siguiente upstream si el actual está down
        # proxy_next_upstream error timeout http_500 http_502 http_503 http_504;

        # Tiempo de conexión de puerta de enlace (gateway)
        proxy_read_timeout 20s;
        proxy_send_timeout 20s;
    }

    #   Todas las peticiones hacia el servicio generador de codigo
    location /api/codegen/ {

        # Todas las peticiones que inicien con el llamado '/api/codegen/' se sobre escriben
        # con los demás parámetros que existen en la URL
        rewrite /api/codegen/(.*) /$1 break;
        
        proxy_pass  http://drawio-codegen--microservice/;
        proxy_redirect default;

        # Cabeceras
        proxy_set_header X-Real_IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        proxy_http_version 1.1;
        proxy_redirect off;

        # Conectar con el siguiente upstream si el actual está down
        # proxy_next_upstream error timeout http_500 http_502 http_503 http_504;

        # Tiempo de conexión de puerta de enlace (gateway)
        proxy_read_timeout 20s;
        proxy_send_timeout 20s;
    }
}